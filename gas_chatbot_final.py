# -*- coding: utf-8 -*-
"""GAS CHATBOT FINAL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/103YWFG3oaXaCRzK9twsuE9ZqP2XgeilS
"""

import re
import time

# Function to validate name
def validate_name(name):
    return bool(re.match(r"^[A-Za-z\s]+$", name))

# Function to validate email
def validate_email(email):
    return bool(re.match(r"[^@]+@[^@]+\.[^@]+", email))

# Function to validate phone number
def validate_phone(phone):
    return bool(re.match(r"^\d{10}$", phone))

# Function to collect customer information
def collect_customer_info():
    while True:
        name = input("Please enter your name: ")
        if validate_name(name):
            break
        else:
            print("Invalid name. Please use alphabetic characters only.")

    while True:
        email = input("Please enter your email ID: ")
        if validate_email(email):
            break
        else:
            print("Invalid email ID. Please enter a valid email address.")

    while True:
        phone = input("Please enter your phone number: ")
        if validate_phone(phone):
            break
        else:
            print("Invalid phone number. Please enter a 10-digit number.")

    print("\nThanks for the details! You're all set. 🌟\n")
    time.sleep(1)
    return name, email, phone

# Define patterns and responses for the gas inquiry chatbot
patterns_responses = {
    # New gas connection
    r'new (gas |)connection|new gas|apply|new conn':
        'So you want to get a new gas connection? Fancy! 🚀 Visit our nearest office or apply online at www.gascompany.com/newconnection.',

    # Booking or refill
    r'book|refill|order|request':
        'Refill booked! 🚚 Expect a cylinder at your doorstep in 3-5 working days. Don\'t worry, we won\'t make you wait forever.',

    # Status of booking
    r'status|track|update':
        'Your gas refill is on the move. It\'s like a treasure hunt, but with less treasure and more gas.',

    # Change of address
    r'change (.*)address|update address|move':
        'Moving to a new place? We can help with that! 🏠 Visit our nearest office or call 1800-123-456 to update your address.',

    # Complaints
    r'complaint|issue|problem|trouble':
        'Oh no, something went wrong? 😢 Tell us more so we can fix it faster than you can say "customer service."',

    # Price inquiry
    r'price|cost|rate|charges|how much|pricing':
        'Curious about the price? It\'s $50 per cylinder. If you were hoping for a discount, well, maybe next time.',

    # Payment options
    r'pay|payment|how to pay|bill':
        'Paying for gas is easy peasy! 💳 We accept credit/debit cards, net banking, or UPI. Just choose what suits your fancy.',

    # Tracking order
    r'track|order status|check order|delivery':
        'Track your order online like a pro detective. 🕵️‍♂️ Enter your booking ID or give us a shout at customer service.',

    # Delivery issues
    r'delay|not delivered|late|waiting|delivery problem':
        'Looks like there\'s a hiccup. 😬 Provide your booking ID so we can get things moving faster than a snail on roller skates.',

    # Cancel booking
    r'cancel|cancel booking|stop order':
        'Decided to cancel? No problem! 🛑 Visit our website or call 1800-123-456 with your booking ID. We\'ll handle it with flair.',

    # Subsidy details
    r'subsidy|discount|rebate|benefit':
        'Looking for a subsidy? 🌟 Make sure your account is linked with your Aadhaar number. For more details, check out our website.',

    # Changing connection type
    r'change connection|switch|upgrade|LPG|cylinder type':
        'Want to switch things up? 🔄 Visit our nearest office or give us a ring to change your connection type or switch to LPG.',

    # Gas safety
    r'safety|tips|precaution|safe':
        'Gas safety is no joke! 🚨 Make sure you have proper ventilation, check for leaks, and never leave the gas on unattended. Safety first!',

    # Customer service contact
    r'contact|customer service|support|help':
        'Need help? We\'ve got you covered. 📞 Call us at 1800-123-456 or email support@gascompany.com. We\'re here to save the day!',

    # Thank you response
    r'thank you|thanks|thx|thank':
        'You\'re welcome! 😄 If you need more help or just want to chat, we\'re here for you. Give us a shout!',

    # Goodbye message
    r'bye|goodbye|exit|quit':
        'Goodbye! 🚀 If you have more questions or need us again, don’t be a stranger. Have a fantastic day!'
}

# Default response for unmatched patterns
default_response = "Hmm, I didn’t quite catch that. Can you try rephrasing it? 🤔"

# Function to match user input to all patterns and return the corresponding responses
def get_response(user_input):
    responses = []
    for pattern, response in patterns_responses.items():
        if re.search(pattern, user_input, re.IGNORECASE):
            responses.append(response)
    if responses:
        return '\n'.join(responses)  # Join responses with line breaks
    return default_response

# Main function to run the gas inquiry chatbot
def gas_inquiry_chatbot():
    print("Welcome to the Gas Inquiry Chatbot! 🤖")
    time.sleep(1)

    # Collect customer information
    name, email, phone = collect_customer_info()

    # List to store the chat history
    chat_history = []

    # Start the chatbot conversation
    print("Chatbot: Hi " + name + "! How can I assist you today? Type 'bye' to exit or 'history' to see your chat history.")
    while True:
        user_input = input("You: ")

        # Store user input in chat history
        chat_history.append(f"You: {user_input}")

        # Check if the user requested chat history
        if re.search(r'history', user_input, re.IGNORECASE):
            print("Chatbot: Here's your chat history:")
            for entry in chat_history:
                print(entry)
            continue  # Skip the rest of the loop to avoid processing 'history' as a regular input

        response = get_response(user_input)  # Get the response for the user input

        # Store chatbot response in chat history
        chat_history.append(f"Chatbot: {response}")

        print("Chatbot:", response)  # Print the chatbot's response

        # Check if the user said 'bye' or 'goodbye'
        if re.search(r'bye|goodbye|exit|quit', user_input, re.IGNORECASE):
            # Ask for user feedback before exiting
            feedback = input("Chatbot: Before you go, could you rate your experience with us? (1-5): ")

            # Save the feedback in the chat history
            chat_history.append(f"User Feedback: {feedback}/5")

            # Print the feedback and say goodbye
            print(f"Chatbot: Thank you for your feedback of {feedback}/5! Goodbye!")

            break  # Exit the loop after responding with the goodbye message

# Run the gas inquiry chatbot
gas_inquiry_chatbot()